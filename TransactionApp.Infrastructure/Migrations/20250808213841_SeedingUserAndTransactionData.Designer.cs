// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionApp.Infrastructure.Data;

#nullable disable

namespace TransactionApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808213841_SeedingUserAndTransactionData")]
    partial class SeedingUserAndTransactionData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TransactionApp.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.00m,
                            CreatedAt = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = "10b42cd3-4690-4281-bc71-14679b0c7204"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 250.00m,
                            CreatedAt = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = "10b42cd3-4690-4281-bc71-14679b0c7204"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 15.00m,
                            CreatedAt = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = "10b42cd3-4690-4281-bc71-14679b0c7204"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 5.00m,
                            CreatedAt = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = "10b42cd3-4690-4281-bc71-14679b0c7204"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 50.00m,
                            CreatedAt = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = "3178e886-113f-44b8-9c63-2a173ddfe45c"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 75.00m,
                            CreatedAt = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = "3178e886-113f-44b8-9c63-2a173ddfe45c"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 16.00m,
                            CreatedAt = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = "3178e886-113f-44b8-9c63-2a173ddfe45c"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 22.00m,
                            CreatedAt = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = "3178e886-113f-44b8-9c63-2a173ddfe45c"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 19.00m,
                            CreatedAt = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = "15cc7ba5-35c7-42dd-b688-d2bfa8c0f3a7"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 79.00m,
                            CreatedAt = new DateTime(2025, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = "15cc7ba5-35c7-42dd-b688-d2bfa8c0f3a7"
                        });
                });

            modelBuilder.Entity("TransactionApp.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "10b42cd3-4690-4281-bc71-14679b0c7204",
                            Email = "alice@test.com",
                            FirstName = "Alice",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = "15cc7ba5-35c7-42dd-b688-d2bfa8c0f3a7",
                            Email = "bob@test.com",
                            FirstName = "Bob",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = "3178e886-113f-44b8-9c63-2a173ddfe45c",
                            Email = "James@test.com",
                            FirstName = "James",
                            LastName = "West"
                        });
                });

            modelBuilder.Entity("TransactionApp.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("TransactionApp.Domain.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TransactionApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
